{"ast":null,"code":"var _jsxFileName = \"/Users/sanzamcmillian/Quiz_Web_App/Frontend_Dev/src/components/TeacherDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport './style/TeacherDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeacherDashboard = () => {\n  _s();\n  const [studentResults, setStudentResults] = useState([]);\n  useEffect(() => {\n    // Fetch all student results\n    const fetchStudentResults = async () => {\n      try {\n        const response = await fetch('/api/all-student-results'); // Adjust endpoint accordingly\n        const data = await response.json();\n        setStudentResults(data);\n      } catch (error) {\n        console.error('Error fetching student results:', error);\n      }\n    };\n    fetchStudentResults();\n  }, []);\n\n  // Prepare data for the chart\n  const chartData = {\n    labels: studentResults.map(result => result.date),\n    datasets: [{\n      label: 'Student Scores',\n      data: studentResults.map(result => result.score),\n      fill: false,\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      tension: 0.1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"teacher-dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Teacher Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"All Student Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: studentResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Student ID: \", result.studentId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Date: \", result.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Score: \", result.score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(TeacherDashboard, \"eEbT/MZiMzas7FeLtDMsZ1rCidY=\");\n_c = TeacherDashboard;\nexport default TeacherDashboard;\nvar _c;\n$RefreshReg$(_c, \"TeacherDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","jsxDEV","_jsxDEV","TeacherDashboard","_s","studentResults","setStudentResults","fetchStudentResults","response","fetch","data","json","error","console","chartData","labels","map","result","date","datasets","label","score","fill","backgroundColor","borderColor","tension","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","studentId","_c","$RefreshReg$"],"sources":["/Users/sanzamcmillian/Quiz_Web_App/Frontend_Dev/src/components/TeacherDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport Chart from 'chart.js/auto';\r\nimport './style/TeacherDashboard.css';\r\n\r\nconst TeacherDashboard = () => {\r\n  const [studentResults, setStudentResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch all student results\r\n    const fetchStudentResults = async () => {\r\n      try {\r\n        const response = await fetch('/api/all-student-results'); // Adjust endpoint accordingly\r\n        const data = await response.json();\r\n        setStudentResults(data);\r\n      } catch (error) {\r\n        console.error('Error fetching student results:', error);\r\n      }\r\n    };\r\n\r\n    fetchStudentResults();\r\n  }, []);\r\n\r\n  // Prepare data for the chart\r\n  const chartData = {\r\n    labels: studentResults.map(result => result.date),\r\n    datasets: [\r\n      {\r\n        label: 'Student Scores',\r\n        data: studentResults.map(result => result.score),\r\n        fill: false,\r\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n        borderColor: 'rgba(75, 192, 192, 1)',\r\n        tension: 0.1\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div className=\"teacher-dashboard-container\">\r\n      <h2>Teacher Dashboard</h2>\r\n      <div className=\"chart-container\">\r\n        <Line data={chartData} />\r\n      </div>\r\n      <div className=\"results-list\">\r\n        <h3>All Student Results</h3>\r\n        <ul>\r\n          {studentResults.map((result, index) => (\r\n            <li key={index}>\r\n              <p>Student ID: {result.studentId}</p>\r\n              <p>Date: {result.date}</p>\r\n              <p>Score: {result.score}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeacherDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}