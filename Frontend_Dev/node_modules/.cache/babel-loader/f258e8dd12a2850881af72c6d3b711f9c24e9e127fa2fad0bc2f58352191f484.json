{"ast":null,"code":"var _jsxFileName = \"/home/inganathi/Quiz_Web_App/Frontend_Dev/src/components/ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { requestPasswordReset } from './Api'; // Import the requestPasswordReset function from Api.js\nimport './style/ForgotPassword.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const handlePasswordResetRequest = async () => {\n    try {\n      const response = await requestPasswordReset(email);\n      if (response.status === 200) {\n        setMessage('Password reset link has been sent to your email.');\n      } else {\n        setError('Failed to send password reset link.');\n      }\n    } catch (err) {\n      setError('An error occurred. Please try again.');\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    handlePasswordResetRequest(); // Call handlePasswordResetRequest on form submit\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-password-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forgot-password-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter your email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send Reset Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"success\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 23\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"+oC6IIAeBPUO7WCSW4CSxdFqDlU=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","requestPasswordReset","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","message","setMessage","error","setError","handlePasswordResetRequest","response","status","err","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/home/inganathi/Quiz_Web_App/Frontend_Dev/src/components/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { requestPasswordReset } from './Api'; // Import the requestPasswordReset function from Api.js\nimport './style/ForgotPassword.css'; // Import the CSS file\n\nconst ForgotPassword = () => {\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n\n  const handlePasswordResetRequest = async () => {\n    try {\n      const response = await requestPasswordReset(email);\n      if (response.status === 200) {\n        setMessage('Password reset link has been sent to your email.');\n      } else {\n        setError('Failed to send password reset link.');\n      }\n    } catch (err) {\n      setError('An error occurred. Please try again.');\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handlePasswordResetRequest(); // Call handlePasswordResetRequest on form submit\n  };\n\n  return (\n    <div className=\"forgot-password-container\">\n      <div className=\"forgot-password-form\">\n        <h2>Forgot Password</h2>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"email\"\n            placeholder=\"Enter your email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n          <button type=\"submit\">Send Reset Link</button>\n          {message && <p className=\"success\">{message}</p>}\n          {error && <p className=\"error\">{error}</p>}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPassword;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,oBAAoB,QAAQ,OAAO,CAAC,CAAC;AAC9C,OAAO,4BAA4B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,0BAA0B,GAAG,MAAAA,CAAA,KAAY;IAC7C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,oBAAoB,CAACK,KAAK,CAAC;MAClD,IAAIO,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3BL,UAAU,CAAC,kDAAkD,CAAC;MAChE,CAAC,MAAM;QACLE,QAAQ,CAAC,qCAAqC,CAAC;MACjD;IACF,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZJ,QAAQ,CAAC,sCAAsC,CAAC;IAClD;EACF,CAAC;EAED,MAAMK,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBN,0BAA0B,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,oBACET,OAAA;IAAKgB,SAAS,EAAC,2BAA2B;IAAAC,QAAA,eACxCjB,OAAA;MAAKgB,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnCjB,OAAA;QAAAiB,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBrB,OAAA;QAAMsB,QAAQ,EAAET,YAAa;QAAAI,QAAA,gBAC3BjB,OAAA;UACEuB,IAAI,EAAC,OAAO;UACZC,WAAW,EAAC,kBAAkB;UAC9BC,KAAK,EAAEtB,KAAM;UACbuB,QAAQ,EAAGZ,CAAC,IAAKV,QAAQ,CAACU,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;UAC1CG,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFrB,OAAA;UAAQuB,IAAI,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC7ChB,OAAO,iBAAIL,OAAA;UAAGgB,SAAS,EAAC,SAAS;UAAAC,QAAA,EAAEZ;QAAO;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC/Cd,KAAK,iBAAIP,OAAA;UAAGgB,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAEV;QAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CA1CID,cAAc;AAAA4B,EAAA,GAAd5B,cAAc;AA4CpB,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}